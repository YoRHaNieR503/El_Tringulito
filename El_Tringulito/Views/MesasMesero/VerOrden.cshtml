@model El_Tringulito.Models.Mesas

@{
    ViewData["Title"] = "Ver Orden";
    bool puedeCancelar = ViewBag.EstadoGeneral == "Pendiente";
    bool tieneOrden = ViewBag.EstadoGeneral != "Sin Orden";
    bool esParaLlevar = ViewBag.EsParaLlevar ?? false;
    string nombreEntidad = esParaLlevar ? "Para Llevar" : Model.nombre;
    var codigoOrden = ViewBag.CodigoOrden;
}

<style>
    body {
        background-color: #1E1E2F;
        color: #FFFFFF;
        font-family: 'Segoe UI', sans-serif;
    }

    .card {
        background-color: #2C2C3A;
        border-radius: 12px;
    }

    .btn-primary {
        background-color: #A259FF;
        border-color: #A259FF;
    }

    .btn-success {
        background-color: #FFD700;
        color: #000;
    }

    .btn-danger {
        background-color: #FF4C4C;
        border-color: #FF4C4C;
    }

    .badge-pendiente {
        background-color: #FFD700;
        color: #000;
    }

    .badge-enproceso {
        background-color: #007BFF;
    }

    .badge-entregada {
        background-color: #28A745;
    }

    .badge-para-llevar {
        background-color: #17a2b8;
        color: white;
    }

    .producto-item {
        transition: all 0.3s ease;
    }

        .producto-item:hover {
            background-color: #3A3A4A;
        }

    .comentario-input {
        border-radius: 0 0 5px 5px;
        border-top: 1px dashed #dee2e6;
    }

    .eliminar-btn:hover {
        transform: scale(1.1);
    }

    .info-icon {
        cursor: pointer;
        color: #6c757d;
    }

    .modal-content {
        background-color: #2C2C3A;
        color: white;
        border-radius: 10px;
    }
</style>

<div class="container-fluid" style="background: linear-gradient(135deg, #000, #d4af37); color: white;">
    <div class="container py-5">
        <h1 class="text-center my-4">Orden - @nombreEntidad</h1>

        @if (tieneOrden)
        {
            <div class="acciones-orden text-end mb-3">
                <span class="badge @(ViewBag.EstadoGeneral == "Pendiente" ? "badge-pendiente" : ViewBag.EstadoGeneral == "En Proceso" ? "badge-enproceso" : "badge-entregada") px-3 py-2">
                    @ViewBag.EstadoGeneral
                </span>

                <div class="btn-group mt-2" role="group">
                    @if (puedeCancelar && !esParaLlevar)
                    {
                        <form asp-action="CancelarOrden" method="post" onsubmit="return confirm('¿Cancelar esta orden?');">
                            <input type="hidden" name="id_mesa" value="@Model.id_mesa" />
                            <button type="submit" class="btn btn-danger">Cancelar Orden</button>
                        </form>
                    }
                    @if (puedeCancelar && esParaLlevar)
                    {
                        <form asp-action="CancelarOrdenParaLlevar" method="post" onsubmit="return confirm('¿Cancelar esta orden?');">
                            <input type="hidden" name="id" value="@codigoOrden" />
                            <button type="submit" class="btn btn-danger">Cancelar Orden</button>
                        </form>
                    }
                    @if (ViewBag.PuedeFinalizar && !esParaLlevar)
                    {
                        <form asp-action="FinalizarOrden" method="post" onsubmit="return confirm('¿Finalizar esta orden?');">
                            <input type="hidden" name="id_mesa" value="@Model.id_mesa" />
                            <button type="submit" class="btn btn-primary">Finalizar Orden</button>
                        </form>
                    }
                    @if (ViewBag.PuedeFinalizar && esParaLlevar)
                    {
                        <form asp-action="FinalizarOrdenParaLlevar" method="post" onsubmit="return confirm('¿Finalizar esta orden?');">
                            <input type="hidden" name="codigo_orden" value="@codigoOrden" />
                            <button type="submit" class="btn btn-primary">Finalizar Orden</button>
                        </form>
                    }
                </div>
            </div>
        }

        <form asp-action="ActualizarOrden" method="post" class="card p-4 shadow" onsubmit="agregarCamposOcultos()">
            @if (!esParaLlevar)
            {
                <input type="hidden" asp-for="id_mesa" />
            }

            <div class="form-group mb-3">
                <label for="nombre_cliente" class="form-label">Nombre del Cliente:</label>
                <input type="text" id="nombre_cliente" name="nombre_cliente" class="form-control" required value="@ViewBag.NombreCliente" @(ViewBag.EstadoGeneral == "En Proceso" ? "readonly" : "") />
            </div>

            <div class="form-group mb-4">
                <label class="form-label">Agregar Productos:</label>
                <div class="d-grid gap-2 d-md-block">
                    <button type="button" class="btn btn-primary me-2" onclick="cargarPlatos()"><i class="bi bi-egg-fried"></i> Platos</button>
                    <button type="button" class="btn btn-outline-info" onclick="cargarBebidas()"><i class="bi bi-cup-straw"></i> Bebidas</button>
                    <button type="button" class="btn btn-success me-2" onclick="cargarPromociones()"><i class="bi bi-tag"></i> Promociones</button>
                    <button type="button" class="btn btn-warning" onclick="cargarCombos()"><i class="bi bi-collection"></i> Combos</button>
                </div>
            </div>

            <div id="productosSeleccionados" class="mb-4">
                <h4>Productos Seleccionados:</h4>
                <ul class="list-group" id="listaSeleccionados">
                    @if (tieneOrden)
                    {
                        foreach (var item in ViewBag.OrdenesActivas)
                        {
                            <li class="list-group-item producto-item bg-dark text-white mb-2">
                                <div class="p-2">
                                    @if (item.TipoProducto == "Promoción")
                                    {
                                        <strong>Promoción:</strong>
                                        @Html.Raw(item.NombreProducto)
                                    }
                                    else
                                    {
                                        <strong>@item.NombreProducto</strong>
                                    }
                                    <div>
                                        <span class="badge bg-secondary">@item.TipoProducto</span>
                                        <span class="badge bg-info">@item.Orden.estado</span>
                                        @if (item.Orden.para_llevar)
                                        {
                                            <span class="badge bg-info text-dark">Para llevar</span>
                                        }
                                        <span class="text-success fw-bold">$@item.Orden.total?.ToString("F2")</span>
                                    </div>
                                    @if (!string.IsNullOrWhiteSpace(item.Orden.comentario))
                                    {
                                        <div class="mt-2"><small><strong>Comentario:</strong> @item.Orden.comentario</small></div>
                                    }
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>

            <div class="form-group mb-3">
                <label for="total" class="form-label">Total:</label>
                <input type="text" id="total" name="total" class="form-control" value="@(ViewBag.TotalOrdenes?.ToString("F2") ?? "0.00")" readonly />
            </div>

            <button type="submit" class="btn btn-success w-100">
                <i class="bi bi-check-circle"></i> @(tieneOrden ? "Actualizar Orden" : "Crear Orden")
            </button>
        </form>
    </div>
</div>


<!-- Modal para mostrar productos -->
<div class="modal fade" id="productosModal" tabindex="-1" aria-labelledby="productosModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="productosModalLabel">Seleccionar Productos</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalContent"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let total = parseFloat("@(ViewBag.TotalOrdenes ?? 0)");
        let productosSeleccionados = [];

        function escapeHtml(text) {
            return text.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
                       .replace(/"/g, "&quot;").replace(/'/g, "&#039;");
        }

        function cargarPlatos() {
            $.get("/MesasMesero/GetPlatos", data => mostrarProductosEnModal(data, "platos"));
        }
        function cargarBebidas() {
            $.get("/MesasMesero/GetBebidas", data => mostrarProductosEnModal(data, "bebidas"));
        }
        function cargarPromociones() {
            $.get("/MesasMesero/GetPromociones", data => mostrarProductosEnModal(data, "promociones"));
        }
        function cargarCombos() {
            $.get("/MesasMesero/GetCombos", data => mostrarProductosEnModal(data, "combos"));
        }

        function mostrarProductosEnModal(data, tipo) {
            let html = '<div class="row">';
            data.forEach(p => {
                let id = p.id || p.id_plato || p.id_promocion || p.id_combo || p.id_bebida;
                html += `
                    <div class="col-md-4 mb-3">
                        <div class="card text-dark">
                            <div class="card-body">
                                <h5>${p.nombre}</h5>
                                <p class="text-muted">$${p.precio.toFixed(2)}</p>
                                <button class="btn btn-outline-primary w-100" onclick="agregarProducto(${id}, '${tipo}', '${escapeHtml(p.nombre)}', ${p.precio})">
                                    Agregar
                                </button>
                            </div>
                        </div>
                    </div>`;
            });
            html += '</div>';
            $("#modalContent").html(html);
            new bootstrap.Modal(document.getElementById('productosModal')).show();
        }

        function agregarProducto(id, tipo, nombre, precio) {
            const itemId = `prod_${id}_${tipo}_${Date.now()}`;
            productosSeleccionados.push({ id, tipo, nombre, precio, comentario: '', itemId });

            let html = `
                <li class="list-group-item producto-item p-0 bg-success text-white mb-2" id="${itemId}">
                    <div class="p-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div><strong>${nombre}</strong> - $${precio.toFixed(2)}</div>
                            <button type="button" class="btn btn-sm btn-outline-danger eliminar-btn" onclick="eliminarProducto('${itemId}', ${precio})">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                        <textarea class="form-control form-control-sm comentario-input" rows="2" placeholder="Comentario"
                                  onchange="actualizarComentario('${itemId}', this.value)"></textarea>
                    </div>
                </li>`;
            $("#listaSeleccionados").append(html);
            total += precio;
            $("#total").val(total.toFixed(2));
            bootstrap.Modal.getInstance(document.getElementById('productosModal'))?.hide();
        }

        function actualizarComentario(itemId, comentario) {
            const prod = productosSeleccionados.find(p => p.itemId === itemId);
            if (prod) prod.comentario = comentario;
        }

        function eliminarProducto(itemId, precio) {
            $(`#${itemId}`).remove();
            const index = productosSeleccionados.findIndex(p => p.itemId === itemId);
            if (index !== -1) {
                productosSeleccionados.splice(index, 1);
                total -= precio;
                $("#total").val(total.toFixed(2));
            }
        }

        function agregarCamposOcultos() {
            $("input[name^='productos']").remove();
            productosSeleccionados.forEach((p, i) => {
                $("#productosSeleccionados").append(`
                    <input type="hidden" name="productos[${i}].id" value="${p.id}" />
                    <input type="hidden" name="productos[${i}].tipo" value="${p.tipo}" />
                    <input type="hidden" name="productos[${i}].comentario" value="${escapeHtml(p.comentario)}" />
                `);
            });
        }



            function mostrarProductosEnModal(data, tipo) {
            let html = '<div class="row">';
            data.forEach(p => {
                let id = p.id || p.id_plato || p.id_promocion || p.id_combo || p.id_bebida;
                if (tipo === "promociones") {
                    html += `
                        <div class="col-md-6 mb-3">
                            <div class="card text-white bg-dark">
                                <div class="card-header text-warning fw-bold">
                                    ${p.nombre}
                                </div>
                                <div class="card-body">
                                    ${p.descripcion}
                                    <button class="btn btn-outline-primary w-100 mt-3"
                                            onclick="agregarProducto(${p.id_promocion}, 'promociones', '${p.nombre}', ${p.precio})">
                                        Agregar
                                    </button>
                                </div>
                            </div>
                        </div>`;
                } else {
                    html += `
                        <div class="col-md-4 mb-3">
                            <div class="card text-dark">
                                <div class="card-body">
                                    <h5>${p.nombre}</h5>
                                    <p class="text-muted">$${p.precio.toFixed(2)}</p>
                                    <button class="btn btn-outline-primary w-100"
                                            onclick="agregarProducto(${id}, '${tipo}', '${p.nombre}', ${p.precio})">
                                        Agregar
                                    </button>
                                </div>
                            </div>
                        </div>`;
                }
            });
            html += '</div>';
            $("#modalContent").html(html);
            new bootstrap.Modal(document.getElementById('productosModal')).show();
        }


    </script>
}
