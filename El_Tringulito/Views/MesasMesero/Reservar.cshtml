@model El_Tringulito.Models.Mesas

@{
    ViewData["Title"] = "Reservar";
}

<div class="container-fluid" style="background: linear-gradient(135deg, #000, #d4af37); color: white;">
    <div class="container py-5">
        <h1 class="text-center my-4">Reservar @Model.nombre</h1>

        <form asp-action="CrearOrden" method="post" class="card p-4 shadow" onsubmit="agregarCamposOcultos()">
            <input type="hidden" asp-for="id_mesa" />

            <div class="form-group mb-3">
                <label for="nombre_cliente" class="form-label">
                    Nombre del Cliente:
                    <i class="bi bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="right"
                       title="Ingrese el nombre del cliente para la reserva"></i>
                </label>
                <input type="text" id="nombre_cliente" name="nombre_cliente" class="form-control" required />
            </div>

            <div class="form-group mb-4">
                <label class="form-label">
                    Agregar Productos:
                    <i class="bi bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="right"
                       title="Seleccione el tipo de producto que desea agregar"></i>
                </label>
                <div class="d-grid gap-2 d-md-block">
                    <button type="button" class="btn btn-primary me-2" onclick="cargarPlatos()">
                        <i class="bi bi-egg-fried"></i> Platos
                    </button>
                    <button type="button" class="btn btn-success me-2" onclick="cargarPromociones()">
                        <i class="bi bi-tag"></i> Promociones
                    </button>
                    <button type="button" class="btn btn-warning" onclick="cargarCombos()">
                        <i class="bi bi-collection"></i> Combos
                    </button>
                </div>
            </div>

            <div id="productosSeleccionados" class="mb-4">
                <h4>
                    Productos Seleccionados:
                    <i class="bi bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="right"
                       title="Aquí aparecerán todos los productos agregados. Puede agregar comentarios para cada uno"></i>
                </h4>
                <ul class="list-group" id="listaSeleccionados">
                    <!-- Aquí se mostrarán los productos seleccionados -->
                </ul>
            </div>

            <div class="form-group mb-3">
                <label for="total" class="form-label">
                    Total:
                    <i class="bi bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="right"
                       title="Total calculado automáticamente de todos los productos"></i>
                </label>
                <input type="text" id="total" name="total" class="form-control" readonly />
            </div>

            <button type="submit" class="btn btn-success w-100">
                <i class="bi bi-check-circle"></i> Crear Orden
            </button>
        </form>
    </div>
</div>


<!-- Modal para mostrar productos -->
<div class="modal fade" id="productosModal" tabindex="-1" aria-labelledby="productosModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <!-- Cambiado a modal-xl y scrollable -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productosModalLabel">Seleccionar Productos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Contenido dinámico del modal -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


@section Styles {
    <style>
        body {
            background: linear-gradient(135deg, #000, #d4af37);
            color: white;
        }

        .card {
            background-color: #343a40;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        }

        .form-label, .form-control, .btn {
            color: white;
        }

        .form-control {
            background-color: #495057;
            border: 1px solid #6c757d;
        }

        .btn-primary, .btn-success, .btn-warning {
            border-radius: 5px;
        }

        .producto-item {
            transition: all 0.3s ease;
        }

            .producto-item:hover {
                background-color: #f8f9fa;
            }

        .comentario-input {
            border-radius: 0 0 5px 5px;
            border-top: 1px dashed #dee2e6;
        }

        .eliminar-btn {
            transition: all 0.2s ease;
        }

            .eliminar-btn:hover {
                transform: scale(1.1);
            }

        .info-icon {
            cursor: pointer;
            color: #6c757d;
        }

        .modal-content {
            background-color: #343a40;
            border-radius: 10px;
        }

        .modal-header {
            border-bottom: 1px solid #6c757d;
        }

        .modal-footer {
            border-top: 1px solid #6c757d;
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <script>
        let total = 0;
        let productosSeleccionados = [];

        // Inicializar tooltips
        $(document).ready(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        function cargarPlatos() {
            $.get("/MesasMesero/GetPlatos", function (data) {
                mostrarProductosEnModal(data, "Platos");
            });
        }

        function cargarPromociones() {
            $.get("/MesasMesero/GetPromociones", function (data) {
                mostrarProductosEnModal(data, "Promociones");
            });
        }

        function cargarCombos() {
            $.get("/MesasMesero/GetCombos", function (data) {
                mostrarProductosEnModal(data, "Combos");
            });
        }

        function mostrarProductosEnModal(data, titulo) {
            var html = `<h3>${titulo}</h3><div class="row">`;
            data.forEach(function (producto) {
                let id = producto.id_plato || producto.id_promocion || producto.id_combo;
                html += `
                            <div class="col-md-4 mb-3">
                                <div class="card h-100">
                                    <div class="card-body">
                                        <h5 class="card-title">${producto.nombre}</h5>
                                        <h6 class="card-subtitle mb-2 text-muted">$${producto.precio.toFixed(2)}</h6>
                                        <p class="card-text text-truncate">${producto.descripcion || 'Sin descripción'}</p>
                                        <button type="button" class="btn btn-primary w-100"
                                            onclick="agregarProducto(${id}, '${titulo.toLowerCase()}', '${escapeHtml(producto.nombre)}', ${producto.precio})">
                                            <i class="bi bi-plus-circle"></i> Agregar
                                        </button>
                                    </div>
                                </div>
                            </div>`;
            });
            html += "</div>";
            $("#modalContent").html(html);
            new bootstrap.Modal(document.getElementById('productosModal')).show();
        }

        function escapeHtml(text) {
            return text
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function agregarProducto(id, tipo, nombre, precio) {
            const itemId = `prod_${id}_${tipo}_${Date.now()}`;

            productosSeleccionados.push({
                id,
                tipo,
                nombre,
                precio,
                comentario: '',
                itemId
            });

            var productoHTML = `
                        <li class="list-group-item producto-item p-0" id="${itemId}">
                            <div class="p-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <div>
                                        <strong>${nombre}</strong> - $${precio.toFixed(2)}
                                        <i class="bi bi-info-circle info-icon ms-2" data-bs-toggle="tooltip"
                                           title="Producto ${tipo === 'platos' ? 'plato' : tipo}"></i>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-outline-danger eliminar-btn p-1"
                                        onclick="eliminarProducto('${itemId}', ${precio})"
                                        data-bs-toggle="tooltip" title="Eliminar producto">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                                <div class="form-group mt-2">
                                    <label for="comentario-${itemId}" class="small text-muted">
                                        <i class="bi bi-chat-left-text"></i> Comentarios/Especificaciones:
                                        <i class="bi bi-info-circle info-icon ms-1" data-bs-toggle="tooltip"
                                           title="Ingrese aquí cualquier modificación o instrucción especial para este producto"></i>
                                    </label>
                                    <textarea id="comentario-${itemId}" class="form-control form-control-sm comentario-input"
                                              rows="2" placeholder="Ej: Sin picante, bien cocido, etc."
                                              onchange="actualizarComentario('${itemId}')"></textarea>
                                </div>
                            </div>
                        </li>`;

            $("#listaSeleccionados").append(productoHTML);
            $('[data-bs-toggle="tooltip"]').tooltip();

            total += precio;
            $("#total").val(total.toFixed(2));
            bootstrap.Modal.getInstance(document.getElementById('productosModal'))?.hide();
        }

        function actualizarComentario(itemId) {
            const comentario = $(`#comentario-${itemId}`).val();
            const producto = productosSeleccionados.find(p => p.itemId === itemId);
            if (producto) {
                producto.comentario = comentario;
            }
        }

        function eliminarProducto(itemId, precio) {
            $(`#${itemId}`).remove();
            const index = productosSeleccionados.findIndex(p => p.itemId === itemId);
            if (index !== -1) {
                total -= productosSeleccionados[index].precio;
                productosSeleccionados.splice(index, 1);
            }
            $("#total").val(total.toFixed(2));
        }

        function agregarCamposOcultos() {
            $("input[name^='productos']").remove();
            productosSeleccionados.forEach((producto, index) => {
                var camposOcultos = `
                            <input type="hidden" name="productos[${index}].id" value="${producto.id}" />
                            <input type="hidden" name="productos[${index}].tipo" value="${producto.tipo}" />
                            <input type="hidden" name="productos[${index}].comentario" value="${producto.comentario || ''}" />
                        `;
                $("#productosSeleccionados").append(camposOcultos);
            });
        }
    </script>
}
