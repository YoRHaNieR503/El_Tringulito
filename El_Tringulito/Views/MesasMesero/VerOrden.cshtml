@model El_Tringulito.Models.Mesas

@{
    ViewData["Title"] = "Ver Orden";
    bool puedeCancelar = ViewBag.EstadoGeneral == "Pendiente";
    bool tieneOrden = ViewBag.EstadoGeneral != "Sin Orden";
}

<div class="container" style="background: linear-gradient(to right, #000000, #D4AF37); padding: 30px;">
    <h1 class="text-center my-4 text-white">Mesa @Model.nombre - @(tieneOrden ? $"Orden {ViewBag.EstadoGeneral}" : "Sin Orden")</h1>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card p-4 shadow mb-4" style="background-color: #2C2C2C; border-radius: 10px;">
        @if (tieneOrden)
        {
            <div class="d-flex justify-content-between align-items-center mb-3">
                <span class="badge bg-@(ViewBag.EstadoGeneral == "Pendiente" ? "warning" : "success") fs-6">@ViewBag.EstadoGeneral</span>

                @if (puedeCancelar)
                {
                    <form asp-action="CancelarOrden" method="post" onsubmit="return confirm('¿Cancelar esta orden?');">
                        <input type="hidden" name="id_mesa" value="@Model.id_mesa" />
                        <button type="submit" class="btn btn-danger">Cancelar Orden</button>
                    </form>
                }

                @if (ViewBag.PuedeFinalizar)
                {
                    <form asp-action="FinalizarOrden" method="post" class="d-inline" onsubmit="return confirm('¿Finalizar esta orden?');">
                        <input type="hidden" name="id_mesa" value="@Model.id_mesa" />
                        <button type="submit" class="btn btn-primary">Finalizar Orden</button>
                    </form>
                }
            </div>
        }

        <form asp-action="ActualizarOrden" method="post" onsubmit="agregarCamposOcultos()">
            <input type="hidden" asp-for="id_mesa" />

            <div class="form-group mb-3">
                <label class="text-white">Nombre del Cliente:</label>
                <input type="text" id="nombre_cliente" name="nombre_cliente" class="form-control"
                       value="@ViewBag.NombreCliente" required @(ViewBag.EstadoGeneral == "En Proceso" ? "readonly" : "") />
            </div>

            <div class="form-group mb-4">
                <button type="button" class="btn btn-primary me-2" onclick="cargarPlatos()">Platos</button>
                <button type="button" class="btn btn-success me-2" onclick="cargarPromociones()">Promociones</button>
                <button type="button" class="btn btn-warning" onclick="cargarCombos()">Combos</button>
            </div>

            <div id="productosSeleccionados" class="mb-4">
                <h4 class="text-white">Productos Seleccionados:</h4>
                <ul class="list-group" id="listaSeleccionados">
                    @if (tieneOrden)
                    {
                        foreach (var item in ViewBag.OrdenesActivas)
                        {
                            string estado = item.Orden.estado;
                            string itemId = $"prod_{item.Orden.id_orden}";
                            <li class="list-group-item producto-item p-0" id="@itemId">
                                <div class="p-3">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <div>
                                            <strong class="text-white">@item.NombreProducto</strong> - $@item.Orden.total?.ToString("F2")
                                            <span class="badge bg-secondary ms-2">@item.TipoProducto</span>
                                            <span class="badge bg-@(estado == "Pendiente" ? "warning" : estado == "En Proceso" ? "primary" : "success") ms-2">@estado</span>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(item.Orden.comentario))
                                    {
                                        <p class="small text-white">@item.Orden.comentario</p>
                                    }
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>

            <div class="form-group mb-3">
                <label class="text-white">Total:</label>
                <input type="text" id="total" name="total" class="form-control"
                       value="@(tieneOrden ? ViewBag.TotalOrdenes.ToString("F2") : "0.00")" readonly />
            </div>

            <div class="d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-secondary">Volver a Mesas</a>
                <button type="submit" class="btn btn-success">@(tieneOrden ? "Actualizar Orden" : "Crear Orden")</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="productosModal" tabindex="-1" aria-labelledby="productosModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productosModalLabel">Seleccionar Productos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalContent"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let total = @(tieneOrden ? ViewBag.TotalOrdenes : 0);
        let productosSeleccionados = [];
        let puedeEliminarNuevos = true; // control para productos nuevos

        function escapeHtml(text) {
            return text.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
        }

        function cargarPlatos() { $.get("/MesasMesero/GetPlatos", data => mostrarProductosEnModal(data, "platos")); }
        function cargarPromociones() { $.get("/MesasMesero/GetPromociones", data => mostrarProductosEnModal(data, "promociones")); }
        function cargarCombos() { $.get("/MesasMesero/GetCombos", data => mostrarProductosEnModal(data, "combos")); }

        function mostrarProductosEnModal(data, tipo) {
            let html = `<h5 class="mb-3 text-capitalize">${tipo}</h5><div class="row">`;
            data.forEach(p => {
                let id = p.id_plato || p.id_promocion || p.id_combo;
                html += `
                            <div class="col-md-4 mb-3">
                                <div class="card h-100">
                                    <div class="card-body">
                                        <h5>${p.nombre}</h5>
                                        <h6 class="text-muted">$${p.precio.toFixed(2)}</h6>
                                        <p class="text-truncate">${p.descripcion || 'Sin descripción'}</p>
                                        <button class="btn btn-primary w-100" onclick="agregarProducto(${id}, '${tipo}', '${escapeHtml(p.nombre)}', ${p.precio})">Agregar</button>
                                    </div>
                                </div>
                            </div>`;
            });
            html += "</div>";
            $("#modalContent").html(html);
            new bootstrap.Modal(document.getElementById('productosModal')).show();
        }

        function agregarProducto(id, tipo, nombre, precio) {
            const itemId = `nuevo_${Date.now()}`;
            productosSeleccionados.push({ id, tipo, nombre, precio, comentario: '', itemId });

            const html = `
                        <li class="list-group-item producto-item p-0" id="${itemId}">
                            <div class="p-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <div><strong>${nombre}</strong> - $${precio.toFixed(2)} <span class="badge bg-secondary ms-2">${tipo}</span> <span class="badge bg-primary ms-2">En Proceso</span></div>
                                    <button type="button" class="btn btn-sm btn-outline-danger eliminar-btn p-1"
                                        onclick="eliminarProducto('${itemId}', ${precio})">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                                <div class="form-group mt-2">
                                    <label class="small text-muted">Comentarios:</label>
                                    <textarea class="form-control form-control-sm comentario-input" rows="2"
                                              onchange="actualizarComentario('${itemId}', this.value)"
                                              placeholder="Ej: Sin picante, bien cocido, etc."></textarea>
                                </div>
                            </div>
                        </li>`;
            $("#listaSeleccionados").append(html);
            total += precio;
            $("#total").val(total.toFixed(2));
            bootstrap.Modal.getInstance(document.getElementById('productosModal')).hide();
        }

        function actualizarComentario(itemId, comentario) {
            const producto = productosSeleccionados.find(p => p.itemId === itemId);
            if (producto) producto.comentario = comentario;
        }

        function eliminarProducto(itemId, precio) {
            if (!puedeEliminarNuevos) return; // deshabilitar después de actualizar

            $(`#${itemId}`).remove();
            const index = productosSeleccionados.findIndex(p => p.itemId === itemId);
            if (index !== -1) {
                total -= productosSeleccionados[index].precio;
                productosSeleccionados.splice(index, 1);
            }
            $("#total").val(total.toFixed(2));
        }

        function agregarCamposOcultos() {
            puedeEliminarNuevos = false; // desactivar eliminación al actualizar
            $("input[name^='productos']").remove();
            productosSeleccionados.forEach((p, i) => {
                $("#productosSeleccionados").append(`
                            <input type="hidden" name="productos[${i}].id" value="${p.id}" />
                            <input type="hidden" name="productos[${i}].tipo" value="${p.tipo}" />
                            <input type="hidden" name="productos[${i}].comentario" value="${escapeHtml(p.comentario)}" />
                            <input type="hidden" name="productos[${i}].precio" value="${p.precio}" />
                        `);
            });
        }
    </script>
}
